type Comment{
  commentId: String;
  content: String;
  authId: String;
  postId: String;
  likes: String;
  date: String;
  time: String;
  authName: String
}
input Comment{
  commentId: String;
  content: String;
  authId: String;
  postId: String;
  likes: String;
  date: String;
  time: String;
  authName: String
}

input PostInput {
 authId: String!
  authorName: String
  postId: String
  time: Float
  date: Float
  title: String!
  content: String!
  images: [String]
  videos: [String]
  likes: [String]
  comments: [Comment]
  links: [String]
  location: String
  privacy: String
  repost: [String]
  attachments: [String]
  views: [String]
}

type Post {
  authId: String
  authorName: String
  postId: String
  time: Float
  date: Float
  title: String
  content: String
  images: [String]
  videos: [String]
  likes: [String]
  comments: [Comment]
  links: [String]
  location: String
  privacy: String
  repost: [String]
  attachments: [String]
  views: [String]
}







type Query {
  getPosts: [Post]
}

type Mutation {
  addPost(order: PostInput!): Post
}